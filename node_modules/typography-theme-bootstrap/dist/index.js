"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _grayPercentage = require("gray-percentage");

var _grayPercentage2 = _interopRequireDefault(_grayPercentage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var theme = {
  title: "Bootstrap",
  baseFontSize: "16px",
  baseLineHeight: 1.5,
  bodyFontFamily: ["-apple-system", "BlinkMacSystemFont", "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", "sans-serif"],
  scaleRatio: 2.25,
  bodyWeight: 400,
  headerWeight: 500,
  boldWeight: "bold",
  overrideStyles: function overrideStyles(_ref, options) {
    var adjustFontSizeTo = _ref.adjustFontSizeTo,
        scale = _ref.scale,
        rhythm = _ref.rhythm;
    return {
      body: {
        color: (0, _grayPercentage2.default)(23, 204)
      },
      h1: scale(4 / 4),
      h2: scale(3 / 4),
      h3: scale(2 / 4),
      h4: scale(1 / 6),
      h5: scale(-1 / 6),
      h6: scale(-2 / 6),
      blockquote: _extends({}, scale(1 / 4), {
        borderLeft: rhythm(1 / 6) + " solid #eceeef",
        paddingTop: rhythm(1 / 3),
        paddingBottom: rhythm(1 / 3),
        paddingLeft: rhythm(2 / 3),
        paddingRight: rhythm(2 / 3)
      }),
      "blockquote > :last-child": {
        marginBottom: 0
      },
      "blockquote cite": _extends({}, adjustFontSizeTo(options.baseFontSize), {
        color: (0, _grayPercentage2.default)(54, 204),
        fontWeight: options.bodyWeight,
        fontStyle: "normal"
      })
    };
  }
};

exports.default = theme;